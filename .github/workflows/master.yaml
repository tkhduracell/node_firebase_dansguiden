# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Master Deploys

on:
  push:
    branches: [master]

jobs:
  deploy-functions:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: |
            package-lock.json
            functions/package-lock.json

      - name: Install deps
        run: npm ci && npm ci --prefix functions

      - name: Run build (tsc)
        run: npm run --prefix functions build

      - name: Run lint (ESLint)
        run: npm run --prefix functions lint

      - name: Run test (Jest)
        run: npm run --prefix functions test

      - name: Setup gcloud Cloud SDK auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/58654864940/locations/global/workloadIdentityPools/github-deploy-auth-pool/providers/github-deployer-auth-provider
          service_account: firebase-adminsdk-gcvdo@dansguiden-b3a7d.iam.gserviceaccount.com
          create_credentials_file: true
          export_environment_variables: true
  
      - name: Firebase Deploy (hosting)
        run: npm exec -- firebase deploy --only functions

      - name: Send deploy message to slack
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          YYYYMMDD=$(date '+%Y-%m-%d %H:%M:%S')
          MESSAGE=" ðŸ’ƒ Dansguiden functions has been deployed at: \`${YYYYMMDD}\`"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"${MESSAGE}\"}" ${SLACK_WEBHOOK}

  deploy-web:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: |
            package-lock.json
            web/package-lock.json

      - name: Install deps
        run: npm ci && npm ci --prefix web

      - name: Run lint (ESLint)
        run: npm run --prefix web lint

      - name: Setup gcloud Cloud SDK auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/58654864940/locations/global/workloadIdentityPools/github-deploy-auth-pool/providers/github-deployer-auth-provider
          service_account: firebase-adminsdk-gcvdo@dansguiden-b3a7d.iam.gserviceaccount.com
          create_credentials_file: true
          export_environment_variables: true
  
      - name: Firebase Deploy (hosting)
        run: npm exec -- firebase deploy --only hosting
